# 문제 링크 (주석) : https://www.acmicpc.net/problem/4696
# 문제 설명:
#   Robert가 St. Ives로 가는 길에 만난 행렬의 크기를 기록한 데이터가 여러 해에 걸쳐 주어진다.
#   각 데이터 셋은 한 줄에 하나의 부동소수점 숫자로 주어지며,
#   이는 해당 해에 만난 남자와 함께한 처리의 "배수"를 나타낸다.
#   행렬의 크기는 다음과 같이 계산된다:
#       1 (남자) + n (wives) + n^2 (sacks) + n^3 (cats) + n^4 (kittens)
#
# 입력:
#   여러 데이터 셋이 주어지며, 각 데이터 셋은 한 줄에 하나의 부동소수점 숫자 n이 주어진다.
#   입력의 끝은 0이 주어진다.
#
# 출력:
#   각 데이터 셋에 대해, 평균 행렬의 크기를 소수점 둘째 자리까지 출력한다.
#
# 예제:
#   입력:
#       7
#       1
#       2.5
#       0
#   출력:
#       2801.00
#       5.00
#       64.44
#
# 해결 방법:
#   각 데이터 셋에 대해 n을 읽고, 1 + n + n^2 + n^3 + n^4를 계산한 후 2자리 실수형태로 출력한다.
#
# 시간/공간 복잡도: O(1) per test case

while True:
    n = float(input())
    if n == 0:
        break
    procession_size = 1 + n + n**2 + n**3 + n**4
    print(f"{procession_size:.2f}")