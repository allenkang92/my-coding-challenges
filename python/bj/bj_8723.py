# 문제 링크 : https://www.acmicpc.net/problem/8723
# 문제 설명:
#   Bajtuś(바이투시)는 숲에서 3개의 막대기를 찾았다.
#   이 막대기들을 이용해 직각 삼각형이나 정삼각형을 만들 수 있는지 확인하려 한다.
#   막대기를 자르거나 부술 수 없으므로, 주어진 막대기를 그대로 사용하여 삼각형을 만들어야 한다.
#
# 출력:
#   삼각형을 만들 수 있는 경우에 대해 다음과 같이 출력한다.
#    0 - 직각 삼각형이나 정삼각형 모두 만들 수 없는 경우
#    1 - 직각 삼각형만 만들 수 있는 경우
#    2 - 정삼각형만 만들 수 있는 경우
#
# 해결 방법 설명:
#   입력받은 세 막대기의 길이를 정렬한 후,
#   1) 모든 값이 같다면 정삼각형이므로 2를 출력한다.
#   2) 그 외의 경우, 정렬된 상태에서 첫 번째와 두 번째 막대 길이의 제곱의 합이 
#      세 번째 막대 길이의 제곱과 같고 세 변의 길이가 모두 다른 경우 직각 삼각형이므로 1을 출력한다.
#   3) 위의 두 경우에 해당하지 않으면 0을 출력한다.
#
# 시간/공간 복잡도 : O(1)

a, b, c = list(map(int, input().split(" ")))
t_list = sorted([a, b, c])

if t_list[0] == t_list[1] == t_list[2] and ((t_list[0] ** 2) + (t_list[1] ** 2)) != (t_list[2] ** 2):
    print(2)
elif ((t_list[0] ** 2) + (t_list[1] ** 2)) == (t_list[2] ** 2) and t_list[0] != t_list[1] != t_list[2]:
    print(1)
else:
    print(0)