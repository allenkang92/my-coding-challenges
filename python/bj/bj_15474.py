# 문제 링크: https://www.acmicpc.net/problem/15474
# 문제 설명:
#   JOI 君는 최소 N본 이상의 연필을 구매하고자 합니다.
#   문구점에서는 두 종류의 세트로 연필을 판매하고 있으며,
#     - 세트 X는 A본에 B엔,
#     - 세트 Y는 C본에 D엔입니다.
#   JOI 君는 둘 중 한 종류의 세트만 골라 구매할 수 있습니다.
#   목표는 N본 이상의 연필을 얻기 위해 필요한 최소 비용을 구하는 것입니다.
#
# 해결 방법 설명:
#   각 세트를 구매할 때 필요한 세트의 개수는 올림(ceil) 함수를 사용하여 계산할 수 있으며,
#   이는 (N + (세트당 연필 수) - 1) // (세트당 연필 수) 로 표현할 수 있습니다.
#   따라서,
#     - 세트 X의 총 비용은 ((N + A - 1) // A) * B,
#     - 세트 Y의 총 비용은 ((N + C - 1) // C) * D 가 됩니다.
#   이 두 비용 중 최소값을 출력하면 문제의 답이 됩니다.
#
# 시간/공간 복잡도: O(1)

N, A, B, C, D = map(int, input().split(" "))

cost_X = ((N + A - 1) // A) * B  # 세트 X를 구매하는 총 비용
cost_Y = ((N + C - 1) // C) * D  # 세트 Y를 구매하는 총 비용

print(min(cost_X, cost_Y))