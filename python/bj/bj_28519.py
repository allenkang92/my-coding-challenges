# 문제 링크 (주석) : https://www.acmicpc.net/problem/28519
# 간단한 문제 설명 : 두 차원의 행성들을 방문할 때, 같은 차원의 행성을 연속으로 방문하지 않고 최대한 많은 행성을 방문하는 방법을 찾음
# 해결 방법 설명 : 두 차원의 행성 수가 비슷한 경우 모든 행성을 방문하고, 크게 차이나는 경우 더 작은 쪽의 행성 수를 기준으로 계산
# 시간/공간 복잡도 : O(1) (상수 시간과 공간이 소요됨)

# 입력 받기
n, m = map(int, input().split())

# 최대 방문 행성 수 계산
if abs(n - m) <= 1:
    result = n + m
else:
    result = 2 * min(n, m) + 1

# 결과 출력
print(result)