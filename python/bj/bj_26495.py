# 문제 링크 : https://www.acmicpc.net/problem/26495
# 간단한 문제 설명 : 주어진 양의 정수를 큰 블록 형식으로 출력
# 해결 방법 설명 : 각 숫자에 대한 블록 형식을 정의하고, 입력된 숫자의 각 자릿수에 대해 해당 블록 형식을 출력
# 시간/공간 복잡도 : O(n) (입력된 숫자의 자릿수에 비례하여 시간과 공간이 소요됨)

# 입력 받기
line = input()

# 각 숫자에 대한 블록 형식 정의
# 각 숫자는 5줄로 구성되며, '1'은 해당 위치에 숫자를 출력하고 '0'은 공백을 출력
block_format_list = list(
    map(lambda x: x.split(),
        [
            '1111 1001 1001 1001 1111',  # 0
            '0001 0001 0001 0001 0001',  # 1
            '1111 0001 1111 1 1111',    # 2
            '1111 0001 1111 0001 1111',  # 3
            '1001 1001 1111 0001 0001',  # 4
            '1111 1 1111 0001 1111',     # 5
            '1111 1 1111 1001 1111',     # 6
            '1111 0001 0001 0001 0001',  # 7
            '1111 1001 1111 1001 1111',  # 8
            '1111 1001 1111 0001 0001'   # 9
        ])
)

# 각 자릿수에 대해 블록 형식 출력
for i, char in enumerate(line):
    index = int(char)  # 현재 숫자의 인덱스

    # 블록 형식에 따라 출력
    for block_format in block_format_list[index]:
        print(''.join(map(lambda x: char if int(x) else ' ', block_format)))

    # 마지막 숫자가 아닌 경우 빈 줄 추가
    if i < len(line) - 1:
        print()