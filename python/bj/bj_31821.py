# 문제 링크 (주석) : https://www.acmicpc.net/problem/31821
# 문제 설명:
#   국민대학교 학생식당에서는 여러 코너에서 메뉴를 판매합니다.
#   각 코너의 메뉴 가격과 새내기들이 먹고 싶어 하는 메뉴의 코너 번호가 주어지면,
#   결제해야 할 총 금액을 구하는 문제입니다.
#
# 입력:
#   첫 번째 줄에는 메뉴의 개수 N이 주어집니다. (1 ≤ N ≤ 10)
#   다음 N개의 줄에는 각 코너에서 판매하는 메뉴의 가격 A_i가 주어집니다. (1,000 ≤ A_i ≤ 10,000)
#   그다음 줄에는 새내기의 인원수 M이 주어집니다. (1 ≤ M ≤ 10)
#   다음 M개의 줄에는 각 새내기가 먹고 싶어 하는 메뉴를 판매하는 코너 번호 B_j가 주어집니다. (1 ≤ B_j ≤ N)
#
# 출력:
#   결제해야 하는 총 금액을 출력합니다.
#
# 해결 방법:
#   - 먼저 코너별 메뉴 가격을 리스트에 저장합니다.
#   - 각 새내기가 원하는 코너 번호에 해당하는 가격을 누적 합산합니다.
#
# 시간/공간 복잡도 : O(N + M)

N = int(input())
A_list = [int(input()) for _ in range(N)]  # 메뉴 가격 리스트 (인덱스 0부터 시작)
M = int(input())
total_price = 0

for _ in range(M):
    B = int(input())  # 새내기가 원하는 메뉴를 판매하는 코너 번호
    total_price += A_list[B - 1]  # 1-indexed 입력을 0-indexed에 맞게 사용

print(total_price)