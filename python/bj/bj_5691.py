# 문제 링크 : https://www.acmicpc.net/problem/5691
# 문제 설명:
#   두 정수 A와 B가 주어진다.
#   세 정수 A, B, C의 평균은 (A+B+C)/3이며, 세 정수의 중앙값은 크기순으로 정렬했을 때 가운데에 위치하는 숫자이다.
#   이때, A, B, C의 평균과 중앙값이 같아지도록 만드는 가장 작은 정수 C를 구하는 문제이다.
#
#   조건을 자세히 살펴보면:
#   - 만약 C ≤ A then 정렬 순서는 (C, A, B)이 되어 중앙값은 A가 되고,
#         (A+B+C)/3 = A  →  C = 2A - B.
#   - 만약 A ≤ C ≤ B then 정렬 순서는 (A, C, B)이 되어 중앙값은 C가 되고,
#         (A+B+C)/3 = C  →  C = (A+B)/2, 단 A+B가 짝수여야 한다.
#   - 만약 C ≥ B then 정렬 순서는 (A, B, C)이 되어 중앙값은 B가 되고,
#         (A+B+C)/3 = B  →  C = 2B - A.
#
#   이들 후보 중 가장 작은 정수 C는 항상 C = 2A - B (첫 사례)임을 알 수 있다.
#
# 입력:
#   입력은 여러 테스트 케이스로 이루어져 있으며,
#   각 테스트 케이스는 한 줄에 두 정수 A와 B가 주어진다. (1 ≤ A ≤ B ≤ 10^9)
#   입력의 마지막 줄에는 0이 두 개 주어진다.
#
# 출력:
#   각 테스트 케이스마다 A, B, C의 평균과 중앙값을 같게 만드는 가장 작은 정수 C를 한 줄에 하나씩 출력한다.
#
# 예제:
#   입력: 
#       1 2
#       6 10
#       1 1000000000
#       0 0
#   출력:
#       0
#       2
#       -999999998
#
# 해결 방법:
#   위의 분석에 따라 항상 가장 작은 C는 2A - B이다.
#
# 시간/공간 복잡도: O(1) per test case

while True:
    A, B = map(int, input().split())
    if A == 0 and B == 0:
        break
    print(2 * A - B)