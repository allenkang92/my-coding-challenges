# 문제 링크 : https://school.programmers.co.kr/learn/courses/30/lessons/120889
# 문제 설명:
#   삼각형의 완성 조건(1) 문제입니다.
#   주어진 배열 sides는 삼각형의 세 변의 길이를 나타냅니다.
#   삼각형을 완성하려면, 가장 긴 변의 길이가 나머지 두 변의 길이의 합보다 작아야 합니다.
#
# 해결 방법 설명:
#   1. 배열 sides에서 가장 긴 변(가설선, hypotenuse)을 찾기 위해 max() 함수를 사용합니다.
#   2. sides 배열을 오름차순으로 정렬합니다.
#      - 정렬 후, 가장 작은 두 변은 sides[0]와 sides[1]가 되고, 가장 긴 변은 sides[2]가 됩니다.
#   3. 삼각형의 조건인 "가장 긴 변의 길이가 나머지 두 변의 합보다 작아야 한다"를 확인합니다.
#      - 만약 조건을 만족하면, 삼각형을 만들 수 있으므로 1을 반환합니다.
#      - 조건을 만족시키지 않으면, 삼각형을 만들 수 없으므로 2를 반환합니다.
#
# 시간 복잡도:
#   - sides의 길이가 3이므로 정렬 및 비교 연산은 상수 시간(O(1))에 수행됩니다.
#
# 공간 복잡도:
#   - 결과 저장 및 임시 변수 사용에 상수 공간(O(1))만 사용됩니다.

def solution(sides):
    answer = 0
    # 가장 긴 변(가설선)을 찾기 위해 sides 배열에서 최대값을 저장합니다.
    hypotenuse = max(sides)
    
    # sides 배열을 오름차순으로 정렬합니다.
    # 정렬을 통해 가장 작은 두 변은 sides[0]와 sides[1], 가장 긴 변은 sides[2]가 됩니다.
    sides = sorted(sides)
    
    # 삼각형을 만들 수 있는 조건: 가장 긴 변의 길이가 나머지 두 변의 합보다 작아야 합니다.
    if hypotenuse < sides[0] + sides[1]:
        # 조건 만족: 삼각형 완성 가능 → 결과에 1을 추가합니다.
        answer += 1
    else:
        # 조건 불만족: 삼각형 완성 불가능 → 결과에 2를 추가합니다.
        answer += 2
        
    # 최종 결과를 반환합니다.
    return answer