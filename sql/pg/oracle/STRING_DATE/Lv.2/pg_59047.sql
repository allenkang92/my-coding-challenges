-- 문제 링크 : https://school.programmers.co.kr/learn/courses/30/lessons/59047?language=oracle
-- 간단한 문제 설명 : 
--   - ANIMAL_INS 테이블에서 이름에 'el'이 들어가는 개의 ANIMAL_ID와 NAME을 조회
--   - 결과는 이름을 기준으로 오름차순 정렬
--   - 대소문자 구분 없이 검색

-- -----------------------------------------------------------------------------------------
-- 테이블 스키마 :
--   - ANIMAL_INS 테이블:
--     - ANIMAL_ID         VARCHAR(N)    NOT NULL  -- 동물 아이디
--     - ANIMAL_TYPE       VARCHAR(N)    NOT NULL  -- 생물 종
--     - DATETIME          DATETIME      NOT NULL  -- 보호 시작일
--     - INTAKE_CONDITION  VARCHAR(N)    NOT NULL  -- 보호 시작 시 상태
--     - NAME              VARCHAR(N)         TRUE    -- 동물 이름 (NULL 가능)
--     - SEX_UPON_INTAKE   VARCHAR(N)    NOT NULL  -- 성별 및 중성화 여부
-- -----------------------------------------------------------------------------------------
-- 해결 방법 설명:
--   1. ANIMAL_INS 테이블에서 ANIMAL_TYPE이 'Dog'인 행을 필터링
--   2. NAME 컬럼에서 'el'이 포함된 이름을 대소문자 구분 없이 검색
--      - Oracle에서는 LIKE 연산자가 대소문자를 구분하므로, LOWER 함수를 사용하여 소문자로 변환 후 비교
--   3. ANIMAL_ID와 NAME을 선택
--   4. NAME을 기준으로 오름차순 정렬

-- 사용한 SQL 문법 및 함수 설명 :
--   - SELECT: 원하는 컬럼 선택
--   - FROM: 데이터를 조회할 테이블 지정
--   - WHERE: 조건에 맞는 행 필터링
--   - LOWER: 문자열을 소문자로 변환
--   - LIKE: 패턴 매칭
--   - AND: 두 조건을 동시에 만족
--   - ORDER BY: 결과 정렬
--
-- 쿼리 최적화 방법 :
--   - NAME과 ANIMAL_TYPE 컬럼에 인덱스를 생성하여 WHERE 절의 필터링 성능 향상
--     예시 인덱스 생성:
--       CREATE INDEX idx_animal_type ON ANIMAL_INS(ANIMAL_TYPE);
--       CREATE INDEX idx_animal_name ON ANIMAL_INS(NAME);
--
-- 시간/공간 복잡도 :
--   - 시간복잡도 : O(N) - 테이블 전체 스캔 후 필터링 및 정렬
--   - 공간복잡도 : O(K) - 결과 집합 저장 공간 (K는 조건에 맞는 동물의 수)
-- -------------------------------------------------------------------------------------------
-- 최종 쿼리
-- -------------------------------------------------------------------------------------------

SELECT 
    ANIMAL_ID,                            -- 동물의 ID
    NAME                                  -- 동물의 이름
FROM 
    ANIMAL_INS
WHERE 
    ANIMAL_TYPE = 'Dog' AND                -- 동물이 개인 경우
    LOWER(NAME) LIKE '%el%'                -- 이름에 'el'이 포함된 경우 (대소문자 무시)
ORDER BY 
    NAME ASC;                              -- 이름을 기준으로 오름차순 정렬

-- -------------------------------------------------------------------------------------------
-- 쿼리 오류 수정:
-- 오류 메시지: ORA-00920: invalid relational operator
-- 원인:
--   - WHERE 절에서 논리 연산자 사용 시 구문 오류 가능성
--   - 대소문자 구분 문제로 인해 예상치 못한 결과 발생
-- 해결 방법:
--   1. 대소문자 구분 없이 'el'을 포함하는 이름을 찾기 위해 LOWER 함수를 사용
--   2. AND 연산자를 올바르게 사용하여 두 조건을 동시에 만족
--   3. 전체 쿼리 구조를 재검토하여 구문 오류가 없는지 확인
--
-- 수정된 쿼리는 대소문자를 무시하고 'el'이 포함된 이름을 가진 개만 정확히 조회합니다.
-- -------------------------------------------------------------------------------------------