-- 문제 링크 : https://school.programmers.co.kr/learn/courses/30/lessons/131530?language=oracle
-- 간단한 문제 설명 : 
--   - PRODUCT 테이블에서 만원 단위의 가격대 별로 상품 개수를 계산
--   - 가격대는 각 구간의 최소 금액으로 표시하며, 오름차순으로 정렬
--   - 결과 컬럼명은 PRICE_GROUP, PRODUCTS로 지정

-- -----------------------------------------------------------------------------------------
-- 테이블 스키마 :
--   - 테이블명 : PRODUCT
--     - PRODUCT_ID		INTEGER		FALSE	-- 상품 ID
--     - PRODUCT_CODE	VARCHAR(8)	FALSE	-- 8자리 상품코드 (앞 2자리는 카테고리 코드)
--     - PRICE			INTEGER		FALSE	-- 상품 판매가 (원)
-- -----------------------------------------------------------------------------------------
-- 해결 방법 설명 :
--   1. PRICE 컬럼을 만원 단위로 그룹화하기 위해 TRUNC 함수를 사용하여 가격을 10,000원 단위로 절삭
--      예: 15000은 10000으로, 9000은 0으로 그룹화
--   2. GROUP BY 절에서 절삭한 가격을 기준으로 그룹화하여 각 가격대별 상품 개수를 COUNT 함수로 계산
--   3. 결과를 PRICE_GROUP 기준으로 오름차순 정렬하여 출력
--
-- -----------------------------------------------------------------------------------------
-- 사용한 SQL 문법 및 함수 설명 :
--   - SELECT: 조회할 컬럼을 선택
--   - TRUNC(PRICE, -4): PRICE 값을 10,000원 단위로 절삭하여 최소 금액을 구함
--   - COUNT(*): 각 그룹별 상품 개수를 계산
--   - FROM: 데이터를 조회할 테이블을 지정
--   - GROUP BY: 특정 컬럼을 기준으로 데이터 그룹화
--   - ORDER BY: 결과를 특정 컬럼 기준으로 정렬
--   - ASC: 오름차순 정렬 지정
-- -----------------------------------------------------------------------------------------
-- 쿼리 최적화 방법 :
--   - PRICE 컬럼에 인덱스를 생성하여 GROUP BY 및 ORDER BY 성능 향상
--     예시 인덱스 생성:
--       CREATE INDEX idx_product_price ON PRODUCT(PRICE);
--   - 필요한 컬럼만 SELECT 절에 포함시켜 데이터 스캔을 최소화
-- -----------------------------------------------------------------------------------------
-- 시간/공간 복잡도 :
--   - 시간복잡도 : O(N)
--     -- 테이블 전체를 스캔하며 PRICE 값을 절삭하고 그룹화를 수행
--   - 공간복잡도 : O(K)
--     -- 그룹화된 결과를 저장하기 위한 공간 (K는 고유 PRICE_GROUP의 수)
-- -----------------------------------------------------------------------------------------
-- 최종 쿼리
-- -------------------------------------------------------------------------------------------

SELECT 
    TRUNC(PRICE, -4) AS PRICE_GROUP,  -- PRICE를 10,000원 단위로 절삭하여 PRICE_GROUP으로 지정
    COUNT(*) AS PRODUCTS               -- 각 PRICE_GROUP별 상품 개수를 PRODUCTS로 계산
FROM 
    PRODUCT
GROUP BY 
    TRUNC(PRICE, -4)                   -- PRICE_GROUP 기준으로 그룹화
ORDER BY 
    PRICE_GROUP ASC;                   -- PRICE_GROUP을 오름차순으로 정렬